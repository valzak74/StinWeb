#pragma checksum "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\ИнтернетЗаказы\Console.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e8c66aea704fd667f8c5ea5e939fbf84a1f63a2e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ИнтернетЗаказы_Console), @"mvc.1.0.view", @"/Views/ИнтернетЗаказы/Console.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\_ViewImports.cshtml"
using StinWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\_ViewImports.cshtml"
using NonFactors.Mvc.Grid;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\_ViewImports.cshtml"
using NonFactors.Mvc.Lookup;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\_ViewImports.cshtml"
using StinWeb.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\ИнтернетЗаказы\Console.cshtml"
using StinWeb.Models.DataManager.Extensions;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e8c66aea704fd667f8c5ea5e939fbf84a1f63a2e", @"/Views/ИнтернетЗаказы/Console.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"303b915066d1efa5c78241ff8833664880cca93b", @"/Views/_ViewImports.cshtml")]
    public class Views_ИнтернетЗаказы_Console : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\ИнтернетЗаказы\Console.cshtml"
  
    ViewBag.Title = "Консоль управления marketplace-заказами";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"card border-round\" style=\"background-color: lightgray;\">\r\n    <div class=\"card-header\">\r\n        <div class=\"input-group-text\" id=\"AliveBlock\">\r\n            ");
#nullable restore
#line 10 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\ИнтернетЗаказы\Console.cshtml"
       Write(Html.CheckBox("alive", true, new { @class = "form-check-input ml-0", id = "chkAlive", onchange = "AliveCheck()" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@")
            <span class=""form-check-label ml-3"" for=""chkAlive"">Только активные</span>
        </div>
        <div class=""input-group input-group-sm"" id=""inputGroupPeriod"">
            <div class=""input-group-prepend"">
                <span class=""input-group-text"">Период</span>
            </div>
            <div id=""reportrange"" style=""background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc;"">
                <i class=""fa fa-calendar""></i>&nbsp;
                <span></span> <i class=""fa fa-caret-down""></i>
            </div>
        </div>
    </div>
    <div class=""card-body"">
        ");
#nullable restore
#line 24 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\ИнтернетЗаказы\Console.cshtml"
   Write(Html.InputGroup("col-6", "Компания :", "<button type=\"button\" id=\"btnAct\" class=\"btn btn-sm btn-outline-success\" onclick=\"btnActClick()\"><span class=\"spinner-grow spinner-grow-sm d-none\" role=\"status\" aria-hidden=\"true\"></span>Акт приема-передачи</button>", "select", "CampaignIds", (SelectList)ViewBag.CampaignIds, new { id = "campaignIds", @class = "form-control", onchange = "InfoTextХранение()" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
            WriteLiteral("    </div>\r\n</div>\r\n\r\n");
#nullable restore
#line 30 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\ИнтернетЗаказы\Console.cshtml"
Write(Html.AjaxGrid(Url.Action("OrdersConsole", "ИнтернетЗаказы", new { alive = true })));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<script>
    $(function () {

        var start = moment();
        var end = moment();

        function cb(start, end) {
            $('#reportrange span').html(start.format('DD.MM.YYYY') + ' - ' + end.format('DD.MM.YYYY'));
        }

        $('#reportrange').daterangepicker({
            ""showDropdowns"": true,
            ""locale"": {
                ""format"": ""DD.MM.YYYY"",
                ""separator"": "" - "",
                ""applyLabel"": ""Выбрать"",
                ""cancelLabel"": ""Отмена"",
                ""fromLabel"": ""от"",
                ""toLabel"": ""до"",
                ""customRangeLabel"": ""Произвольный"",
                ""weekLabel"": ""W"",
                ""daysOfWeek"": [
                    ""Вс"",
                    ""Пн"",
                    ""Вт"",
                    ""Ср"",
                    ""Чт"",
                    ""Пт"",
                    ""Сб""
                ],
                ""monthNames"": [
                    ""Январь"",
                    ""Февраль"",
         ");
            WriteLiteral(@"           ""Март"",
                    ""Апрель"",
                    ""Май"",
                    ""Июнь"",
                    ""Июль"",
                    ""Август"",
                    ""Сентябрь"",
                    ""Октябрь"",
                    ""Ноябрь"",
                    ""Декабрь""
                ],
                ""firstDay"": 1
            },
            startDate: start,
            endDate: end,
            ranges: {
                'Текущая дата': [moment(), moment()],
                'Текущая неделя': [moment().startOf('week').add(1, 'days'), moment()],
                'Текущий месяц': [moment().startOf('month'), moment()],
                'Прошлый месяц': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);

        cb(start, end);
        $(""#chkAlive"").trigger(""change"");
    });
    //$(function () {
    //    setInterval(function () {
    //        if (!$('body').find('.modal.show').length && !$('bo");
            WriteLiteral(@"dy').find('.popover.show').length) {
    //            const gridConsole = new MvcGrid(document.querySelector(""div[data-name='gridConsole']""));
    //            gridgridConsole.reload();
    //        }
    //    }, 60000);// refreshTimeout);
    //});
    function ReloadGrid() {
        if (document.querySelectorAll(""[data-name='gridConsole']"").length > 0) {
            const gridConsole = new MvcGrid(document.querySelector(""div[data-name='gridConsole']""));
            gridConsole.set({
                isAjax: true,
                url: ""OrdersConsole"",
                query: ""startDate="" + DateTimeToLocalISOString($(""#reportrange"").data(""daterangepicker"").startDate._d)
                    + ""&endDate="" + DateTimeToLocalISOString($(""#reportrange"").data(""daterangepicker"").endDate._d)
                    + ""&alive="" + $(""#chkAlive"").is(':checked'),
                loadingDelay: 300
            });
            gridConsole.reload();
        }
    }
    $('#reportrange').on('apply.daterangepi");
            WriteLiteral(@"cker', function (ev, picker) {
        ReloadGrid();
    });
    function AliveCheck() {
        var alive = $(""#chkAlive"").is(':checked');
        $(""#inputGroupPeriod"").attr(""hidden"", alive);
        ReloadGrid();
    }
    function GetLabels(orderId) {
        var url = '");
#nullable restore
#line 122 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\ИнтернетЗаказы\Console.cshtml"
              Write(Url.Action("GetLabelsPdf", "ИнтернетЗаказы"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?id=' + orderId.replaceAll("" "", ""_"") + ""#view=fitH"";
        printPage(url, true);
    }
    function btnActClick() {
        var e = document.getElementById(""campaignIds"");
        $(""#btnAct"").attr(""disabled"", true);
        $('.spinner-grow').removeClass('d-none');
        var url = '");
#nullable restore
#line 129 "C:\Users\Валентин\source\repos\StinWeb\StinWeb\Views\ИнтернетЗаказы\Console.cshtml"
              Write(Url.Action("GetReceptionTransferAct", "ИнтернетЗаказы"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?campaignId=' + e.value + ""#view=fitH"";
        printPage(url, true);
        $('.spinner-grow').addClass('d-none');
        $(""#btnAct"").attr(""disabled"", false);
    }
    document.addEventListener(""rowdblclick"", e => {
        if (e.detail.grid.name == ""gridConsole"") {
            //ModalДокумент(true, e.detail.data[""IdDoc""], e.detail.data[""ВидДокумента10""]);
            if (e.detail.data[""StatusDescription""] == ""Готов/Готов к отгрузке"") {
                if (confirm(""Сформировать отгрузочные документы по заказу "" + e.detail.data[""MarketplaceId""] + ""?"") == true) {
                    EnableBusyScreen();
                    $.ajax({
                        url: ""СформироватьОтгрузочныеДокументы"",
                        type: ""post"",
                        datatype: ""xml"",
                        data: {
                            orderId: e.detail.data[""Id""]
                        },
                        async: true,
                        cache: false,
                      ");
            WriteLiteral(@"  success: function (obj) {
                            if (obj) {  // check if data is defined
                                alert(obj);
                            //    $(""#docContent"").html(obj);
                            //    $(""#выбДокумент"").modal(""show"");
                            }
                            DisableBusyScreen();
                            //ReloadGrid();
                            new MvcGrid(document.querySelector(""div[data-name='gridConsole']"")).reload();
                        },
                        error: function (jqXHR, exception) {
                            var msg = '';
                            if (jqXHR.status === 0) {
                                msg = 'Not connect.\n Verify Network.';
                            } else if (jqXHR.status == 404) {
                                msg = 'Requested page not found. [404]';
                            } else if (jqXHR.status == 500) {
                                msg = 'Internal Server E");
            WriteLiteral(@"rror [500].';
                            } else if (jqXHR.status == 501) {
                                msg = 'Internal Server Error [501].';
                                if (jqXHR.responseText === 'timeout')
                                    msg = 'Блокировка ожидания. Повторите попытку...';
                                else
                                    msg = msg + '\n' + jqXHR.responseText;
                            } else if (jqXHR.status == 502) {
                                msg = 'Internal Server Error [502].';
                                if (jqXHR.responseText != """")
                                    msg = msg + '\n' + jqXHR.responseText;
                            } else if (jqXHR.status == 503) {
                                msg = 'Internal Server Error [503].';
                                if (jqXHR.responseText != """")
                                    msg = msg + '\n' + jqXHR.responseText;
                            } else if (exception === 'pa");
            WriteLiteral(@"rsererror') {
                                msg = 'Requested JSON parse failed.';
                            } else if (exception === 'timeout') {
                                msg = 'Time out error.';
                            } else if (exception === 'abort') {
                                msg = 'Ajax request aborted.';
                            } else {
                                msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }
                            alert(msg);
                        }
                    });
                }
            }
        }
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
